"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PassHookPoint = exports.PassConfig = exports.PriorityTaggedService = exports.MergeExtensionConfigurationPass = exports.MergeExtensionConfigurationContainerBuilder = exports.ServiceClosureArgument = exports.TaggedIteratorArgument = exports.IteratorArgument = exports.BoundArgument = exports.AbstractArgument = exports.Argument = exports.EnvPlaceholderParameterBag = exports.DefaultParameterBag = exports.Parameter = exports.TypedReference = exports.Reference = exports.Extension = exports.ChildDefinition = exports.Definition = exports.ContainerBuilder = exports.Container = exports.Alias = void 0;
const Alias_1 = __importDefault(require("./Alias"));
exports.Alias = Alias_1.default;
const AbstractArgument_1 = __importDefault(require("./Argument/AbstractArgument"));
exports.AbstractArgument = AbstractArgument_1.default;
const Argument_1 = __importDefault(require("./Argument/Argument"));
exports.Argument = Argument_1.default;
const BoundArgument_1 = __importDefault(require("./Argument/BoundArgument"));
exports.BoundArgument = BoundArgument_1.default;
const IteratorArgument_1 = __importDefault(require("./Argument/IteratorArgument"));
exports.IteratorArgument = IteratorArgument_1.default;
const ServiceClosureArgument_1 = __importDefault(require("./Argument/ServiceClosureArgument"));
exports.ServiceClosureArgument = ServiceClosureArgument_1.default;
const ChildDefinition_1 = __importDefault(require("./ChildDefinition"));
exports.ChildDefinition = ChildDefinition_1.default;
const Container_1 = __importDefault(require("./Container"));
exports.Container = Container_1.default;
const Definition_1 = __importDefault(require("./Definition"));
exports.Definition = Definition_1.default;
const Parameter_1 = __importDefault(require("./Parameter"));
exports.Parameter = Parameter_1.default;
const Reference_1 = __importDefault(require("./Reference"));
exports.Reference = Reference_1.default;
const TypedReference_1 = __importDefault(require("./TypedReference"));
exports.TypedReference = TypedReference_1.default;
const MergeExtensionConfigurationPassUtils_1 = require("./Compiler/MergeExtensionConfigurationPassUtils");
Object.defineProperty(exports, "MergeExtensionConfigurationContainerBuilder", { enumerable: true, get: function () { return MergeExtensionConfigurationPassUtils_1.MergeExtensionConfigurationContainerBuilder; } });
const ContainerBuilder_1 = __importDefault(require("./ContainerBuilder"));
exports.ContainerBuilder = ContainerBuilder_1.default;
const Extension_1 = __importDefault(require("./Extension/Extension"));
exports.Extension = Extension_1.default;
const TaggedIteratorArgument_1 = __importDefault(require("./Argument/TaggedIteratorArgument"));
exports.TaggedIteratorArgument = TaggedIteratorArgument_1.default;
const DefaultParameterBag_1 = __importDefault(require("./ParameterBag/DefaultParameterBag"));
exports.DefaultParameterBag = DefaultParameterBag_1.default;
const EnvPlaceholderParameterBag_1 = __importDefault(require("./ParameterBag/EnvPlaceholderParameterBag"));
exports.EnvPlaceholderParameterBag = EnvPlaceholderParameterBag_1.default;
const MergeExtensionConfigurationPass_1 = require("./Compiler/MergeExtensionConfigurationPass");
Object.defineProperty(exports, "MergeExtensionConfigurationPass", { enumerable: true, get: function () { return MergeExtensionConfigurationPass_1.MergeExtensionConfigurationPass; } });
const PriorityTaggedService_1 = __importDefault(require("./Compiler/PriorityTaggedService"));
exports.PriorityTaggedService = PriorityTaggedService_1.default;
const PassConfig_1 = require("./Compiler/PassConfig");
Object.defineProperty(exports, "PassConfig", { enumerable: true, get: function () { return PassConfig_1.PassConfig; } });
Object.defineProperty(exports, "PassHookPoint", { enumerable: true, get: function () { return PassConfig_1.PassHookPoint; } });
exports.default = ContainerBuilder_1.default;
